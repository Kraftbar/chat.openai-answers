Here is an example of a function that computes the transpose of a matrix in C:

Copy code
#include <stdio.h>

#define M 3
#define N 4

void transpose(int A[M][N], int B[N][M])
{
    for (int i = 0; i < M; i++) {
        for (int j = 0; j < N; j++) {
            B[j][i] = A[i][j];
        }
    }
}

int main(void)
{
    int A[M][N] = { {1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12} };
    int B[N][M];

    transpose(A, B);

    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            printf("%d ", B[i][j]);
        }
        printf("\n");
    }

    return 0;
}
This function takes in a matrix A and another matrix B, and computes the transpose of A as B = A^T. It does this by using a nested loop structure to iterate over each element of B and assigning it the corresponding element from A.

The size of the matrices is defined by the constants M and N. In this example, the matrix A is assumed to be a M x N matrix and the matrix B is assumed to be a N x M matrix.

You can modify this function to work with matrices of different sizes or to perform other operations, such as element-wise transposition or inversion.
